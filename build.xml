<!-- phing -->
<project default="build" basedir=".">

    <property file="${project.basedir}/build.properties" />

    <target name="build" depends="update,test">

    </target>

    <target name="prepare">
        <echo>Preparing ...</echo>

        <delete dir="${test.appdir}"/>
        <delete dir="${log.basedir}"/>
        <mkdir  dir="${log.basedir}"/>
        <mkdir  dir="${log.coveragedir}"/>
        <mkdir  dir="${log.apidir}"/>
        <mkdir  dir="${log.codebrowserdir}"/>

    </target>

    <target name="pull">
        <echo>Pulling sources ...</echo>

        <exec command="git submodule init" checkreturn="true" logoutput="true"/>
        <exec command="git submodule update" checkreturn="true" logoutput="true"/>
        <exec command="git pull ${project.remote} ${project.branch}" checkreturn="true" logoutput="true"/>

        <phingCall target="update"/>
    </target>

    <target name="update" depends="prepare">
        <echo>Updating ...</echo>

        <echo msg="Getting latest ${test.appname}" />
        <exec command="git clone ${test.appgit} ${test.appdir}" checkreturn="true" logoutput="true"/>

        <delete file="${test.appcfg}"/>
        <exec command="cp ${project.basedir}/composer.json ${test.appdir}/composer.json" checkreturn="true" logoutput="true"/>

        <exec command="cd ${test.appdir} &amp;&amp; php composer.phar self-update" checkreturn="true" logoutput="true"/>
        <exec command="cd ${test.appdir} &amp;&amp; php composer.phar update --dev" checkreturn="true" logoutput="true"/>

        <delete file="${test.appcfg}"/>
        <exec command="ln -s ${test.apptestcfg} ${test.appcfg}" checkreturn="true" logoutput="true"/>

        <delete file="${test.appcontroller}"/>
        <exec command="ln -s ${test.apptestcontroller} ${test.appcontroller}" checkreturn="true" logoutput="true"/>

        <exec command="ln -s ${test.modulecfg} ${test.moduletestcfg}" checkreturn="true" logoutput="true"/>

    </target>

    <target name="test">
        <echo>Testing ...</echo>

        <exec command="cd ${module.testdir} &amp;&amp; phpunit --include-path=${test.vendorbasedir} --coverage-html ${log.coveragedir} --testdox-html ${log.basedir}/testdox.html --coverage-clover ${log.basedir}/clover.xml --log-junit ${log.basedir}/junit.xml" checkreturn="true" logoutput="true"/>

        <echo msg="Checkstyle" />
        <exec command="phpcs --report=checkstyle --report-file=${log.basedir}/checkstyle.xml --standard=${project.checkstyle} --extensions=php ${module.srcdir}" logoutput="true"/>
        <exec command="phpmd ${module.srcdir} xml codesize,design,naming,unusedcode --reportfile ${log.basedir}/phpmd.xml" logoutput="true" />
        <exec command="phpcpd --log-pmd ${log.basedir}/pmd-cpd.xml ${module.srcdir}" logoutput="true" />
        <exec command="phploc --log-csv ${log.basedir}/phploc.csv ${module.srcdir}*" logoutput="true" />
        <exec command="pdepend --summary-xml=${log.basedir}/pdepend.xml --jdepend-xml=${log.basedir}/jdepend.xml --jdepend-chart=${log.basedir}/dependencies.svg --overview-pyramid=${log.basedir}/overview-pyramid.svg ${module.srcdir}" logoutput="true"/>
        <exec command="apigen --source ${module.srcdir} --destination ${log.apidir}" logoutput="true"/>
        <exec command="phpcb --log ${log.basedir} --source ${module.srcdir} --output ${log.codebrowserdir}" logoutput="true"/>

    </target>

    <target name="classmap">
        <echo>Generating classmap ...</echo>

        <exec command="php ${test.zendbindir}/classmap_generator.php -l ${module.srcdir} -wo ${project.basedir}/autoload_classmap.php"/>

    </target>

    <target name="didef" description="Generates the DI definition">
        <echo>Generating DI definition ...</echo>

        <exec command="php ${module.bindir}/definition_generator.php"/>

    </target>

</project>
