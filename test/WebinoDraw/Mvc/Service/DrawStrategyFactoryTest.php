<?php

namespace WebinoDraw\Mvc\Service;

/**
 * Test class for DrawStrategyFactory.
 * Generated by PHPUnit on 2013-03-19 at 21:52:03.
 */
class DrawStrategyFactoryTest
        extends \PHPUnit_Framework_TestCase
{

    /**
     * @var DrawStrategyFactory
     */
    protected $object;

    /**
     * @var \Zend\ServiceManager\ServiceManager
     */
    protected $services;

    /**
     * @var \Zend\Http\Request
     */
    public $request;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object   = new DrawStrategyFactory;
        $this->services = $this->getMock('Zend\ServiceManager\ServiceManager');
        $this->request  = $this->getMock('Zend\Http\Request');

        $testCase = $this;
        $draw     = $this->getMock('WebinoDraw\WebinoDraw', array(), array(), '', false);

        $this->services->expects($this->exactly(2))
            ->method('get')
            ->will(
                $this->returnCallback(
                    function ($name) use ($draw, $testCase) {

                        switch ($name) {
                            case 'WebinoDraw':
                                return $draw;

                            case 'Request':
                                return $testCase->request;
                        }

                        $testCase->fail(sprintf('Unexpected service %s', $name));
                    }
                )
            );
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers WebinoDraw\Mvc\Service\DrawStrategyFactory::createService
     */
    public function testCreateService()
    {
        $this->request->expects($this->once())
            ->method('isXmlHttpRequest')
            ->will($this->returnValue(false));

        $result = $this->object->createService($this->services);

        $this->assertThat(
            $result,
            $this->isInstanceOf('WebinoDraw\View\Strategy\DrawStrategy')
        );

        $this->assertThat(
            $result,
            $this->logicalNot($this->isInstanceOf('WebinoDraw\View\Strategy\DrawAjaxStrategy'))
        );
    }

    /**
     * @covers WebinoDraw\Mvc\Service\DrawStrategyFactory::createService
     */
    public function testCreateServiceAjax()
    {
        $this->request->expects($this->once())
            ->method('isXmlHttpRequest')
            ->will($this->returnValue(true));

        $result = $this->object->createService($this->services);

        $this->assertThat(
            $result,
            $this->isInstanceOf('WebinoDraw\View\Strategy\DrawAjaxStrategy')
        );
    }

    /**
     * @covers WebinoDraw\Mvc\Service\DrawStrategyFactory::createService
     */
    public function testCreateServiceConsoleRequest()
    {
        $this->request = $this->getMock('Zend\Console\Request', array(), array(), '', false);

        $this->request->expects($this->never())
            ->method('isXmlHttpRequest');

        $result = $this->object->createService($this->services);

        $this->assertThat(
            $result,
            $this->isInstanceOf('WebinoDraw\View\Strategy\DrawStrategy')
        );
    }
}
