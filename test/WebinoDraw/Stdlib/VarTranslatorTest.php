<?php
/**
 * Webino (http://webino.sk)
 *
 * @link        https://github.com/webino/WebinoDraw for the canonical source repository
 * @copyright   Copyright (c) 2012-2014 Webino, s. r. o. (http://webino.sk)
 * @author      Peter Bačinský <peter@bacinsky.sk>
 * @license     New BSD License
 */

namespace WebinoDraw\Stdlib;

use ArrayObject;
use stdClass;

/**
 * Test class for VarTranslator.
 * Generated by PHPUnit on 2013-03-18 at 20:26:26.
 */
class VarTranslatorTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var VarTranslator
     */
    protected $object;

    /**
     * @var \Zend\ServiceManager\AbstractPluginManager
     */
    protected $pluginHelper;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->pluginHelper = $this->getMock('Zend\ServiceManager\AbstractPluginManager');
        $this->object       = new VarTranslator($this->pluginHelper);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers WebinoDraw\Stdlib\VarTranslator::makeVar
     * @todo Implement testMakeVar().
     */
    public function testMakeVar()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers WebinoDraw\Stdlib\VarTranslator::containsVar
     * @todo Implement testContainsVar().
     */
    public function testContainsVar()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers WebinoDraw\Stdlib\VarTranslator::makeVarKeys
     * @todo Implement testMakeVarKeys().
     */
    public function testMakeVarKeys()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers WebinoDraw\Stdlib\VarTranslator::translateString
     */
    public function testTranslateString()
    {
        $string      = 'before {$var} after';
        $expected    = 'before value after';
        $translation = new ArrayObject(array('{$var}' => 'value'));
        $result      = $this->object->translateString($string, $translation);

        $this->assertEquals($expected, $result);
    }

    /**
     * @covers WebinoDraw\Stdlib\VarTranslator::translate
     */
    public function testTranslate()
    {
        $string      = 'before2 {$var2} after2';
        $subject     = array($string);
        $expected    = array('before2 value2 after2');
        $translation = new ArrayObject(array('{$var2}' => 'value2'));

        // test fluent
        $this->assertSame($this->object, $this->object->translate($subject, $translation));

        $this->assertEquals($expected, $subject);
    }

    /**
     * @covers WebinoDraw\Stdlib\VarTranslator::translate
     */
    public function testTranslateStringSubject()
    {
        $subject     = 'before2 {$var2} after2';
        $expected    = 'before2 value2 after2';
        $translation = new ArrayObject(array('{$var2}' => 'value2'));

        // test fluent
        $this->assertSame($this->object, $this->object->translate($subject, $translation));

        $this->assertEquals($expected, $subject);
    }

    /**
     * @covers WebinoDraw\Stdlib\VarTranslator::translate
     */
    public function testTranslateEmptySubject()
    {
        $subject     = null;
        $expected    = $subject;
        $translation = new ArrayObject(array('{$var2}' => 'value2'));

        // test fluent
        $this->assertSame($this->object, $this->object->translate($subject, $translation));

        $this->assertEquals($expected, $subject);
    }

    /**
     * @covers WebinoDraw\Stdlib\VarTranslator::translate
     */
    public function testTranslateUnknownSubject()
    {
        $subject     = new stdClass;
        $expected    = $subject;
        $translation = new ArrayObject(array('{$var2}' => 'value2'));

        // test fluent
        $this->assertSame($this->object, $this->object->translate($subject, $translation));

        $this->assertEquals($expected, $subject);
    }

    /**
     * @covers WebinoDraw\Stdlib\VarTranslator::translationMerge
     * @todo Implement testTranslationMerge().
     */
    public function testTranslationMerge()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers WebinoDraw\Stdlib\VarTranslator::translationDefaults
     * @todo Implement testTranslationDefaults().
     */
    public function testTranslationDefaults()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers WebinoDraw\Stdlib\VarTranslator::translationFetch
     * @todo Implement testTranslationFetch().
     */
    public function testTranslationFetch()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers WebinoDraw\Stdlib\VarTranslator::applyHelper
     * @todo Implement testApplyHelper().
     */
    public function testApplyHelper()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers WebinoDraw\Stdlib\VarTranslator::applyFilter
     * @todo Implement testApplyFilter().
     */
    public function testApplyFilter()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}
