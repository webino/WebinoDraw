<?php

return array(
    'webino_draw' => array(
        /**
         * Override ajax settings
         */
        'ajax_container_xpath' => '//body',
        'ajax_fragment_xpath' => '//*[contains(@class, "ajax-fragment") and @id]',
        /**
         * The Draw Instructions Example
         */
        'instructions' => array(
            // todo render example
            // todo content example
            // todo complex xpath example
            // todo table example

            'absolutize-example-prepare' => array(
                'stackIndex' => '9999997',
                'locator' => 'head',
                'html' => '{$_innerHtml}<script src="./test-script-relative.js"></script><link href="test-link-relative.css"/>',
                'instructions' => array(
                    'form-preapare' => array(
                        'locator' => 'xpath=//body',
                        'html' => '<form action="../../test-action-relative"/>{$_innerHtml}'
                    ),
                ),
            ),
            'absolutize-example' => array(
                'stackIndex' => '9999998',
                'helper' => 'WebinoDrawAbsolutize',
                'locator' => \WebinoDraw\View\Helper\DrawAbsolutize::getDefaultLocator(),
            ),

            'set-value-example' => array(
                'locator' => '.hero-unit .btn-success',
                'value' => 'Fork WebinoDraw on GitHub Â»',
                'attribs' => array(
                    'href' => 'https://github.com/webino/WebinoDraw',
                ),
            ),
            'set-html-extra-example' => array(
                'locator' => 'h1',
                'html' => '{$value}',
                'var' => array(
                    'set' => array(
                        'value' => 'Welcome to %sWebino%s',
                    ),
                    'helper' => array(
                        'value' => array(
                            'sprintf' => array(
                                '{$value}', '<span class="zf-green">', '</span>'
                            ),
                        ),
                    ),
                ),
            ),
            'replace-example' => array(
                'locator' => '.hero-unit p[1]',
                'replace' => '<strong>TEST REPLACE</strong>',
            ),
            'add-element-example' => array(
                'locator' => '.hero-unit',
                'html' => '<span>TEST ADD BEFORE</span>{$_innerHtml}',
            ),
            'remove-single-example-prepare' => array(
                'locator' => '.hero-unit',
                'html' => '{$_innerHtml}<p class="remove-me-single">THIS SHOULD BE REMOVED SINGLE</p>',
            ),
            'remove-single-example' => array(
                'locator' => '.remove-me-single',
                'remove' => 'xpath=.',
            ),
            'remove-example-prepare' => array(
                'locator' => '.hero-unit',
                'html' => '{$_innerHtml}<p class="remove-me">THIS SHOULD BE REMOVED</p><p class="remove-me-xpath">THIS SHOULD BE REMOVED BY XPATH</p>',
            ),
            'remove-example' => array(
                'locator' => 'body',
                'remove' => array(
                    '.remove-me',
                    'xpath=//*[@class="remove-me-xpath"]'
                ),
            ),
            'nodevar-example-prepare' => array(
                'locator' => '.hero-unit',
                'html' => '{$_innerHtml}<h2 data-webino-test="ORIGATTRIB">ORIGCONTENT</h2>',
            ),
            'nodevar-example' => array(
                'locator' => '.hero-unit h2',
                'value' => '{$value}',
                'var' => array(
                    'set' => array(
                        'value' => '{$_nodeValue} NODEVARTEST {$_data-webino-test}',
                        'title' => '{$_nodeValue} NODEVARATTRIBTEST {$_data-webino-test}',
                    ),
                ),
                'attribs' => array(
                    'title' => '{$title}',
                ),
            ),
            'viewvar-example-prepare' => array(
                'locator' => '.hero-unit',
                'html' => '{$_innerHtml}<div class="viewvar-example"/>',
            ),
            'viewvar-example' => array(
                'locator' => '.viewvar-example',
                'value' => '{$viewvar} {$depthvar}',
                'var' => array(
                    'fetch' => array(
                        'depthvar' => 'value.in.the.depth',
                    ),
                ),
            ),
            'filter-example-prepare' => array(
                'locator' => '.hero-unit',
                'html' => '{$_innerHtml}<p class="filter-example">-this should be upper case-</p>',
            ),
            'filter-example' => array(
                'locator' => '.filter-example',
                'value' => '{$_nodeValue}',
                'var' => array(
                    'filter' => array(
                        'pre' => array(
                            '_nodeValue' => array(
                                'stringToUpper' => array(
                                    '{$_nodeValue}'
                                ),
                                'trim' => array(
                                    '{$_nodeValue}', '-'
                                ),
                            ),
                        ),
                    ),
                ),
            ),
            'translate-example-prepare' => array(
                'locator' => '.hero-unit',
                'html' => '{$_innerHtml}<p class="translate-example">this should be translated</p>',
            ),
            'translate-example' => array(
                'locator' => '.translate-example',
                'value' => '{$_nodeValue}',
                'var' => array(
                    'default' => array(
                        'data-textdomain' => 'test',
                    ),
                    'helper' => array(
                        '_nodeValue' => array(
                            'translate' => array(
                                '__invoke' => array(array('{$_nodeValue}', '{$data-textdomain}')),
                            ),
                        ),
                    ),
                ),
            ),
            'loop-example-prepare' => array(
                'locator' => '.hero-unit',
                'html' => '{$_innerHtml}<ul class="loop-example"><li>BEFORE</li><li/><li>AFTER</li></ul>',
            ),
            'loop-example' => array(
                'locator' => '.loop-example li[2]',
                'html' => '<strong/> <span/>',
                'loop' => array(
                    'base' => 'depth.items',
                    'index' => '0',
                    'offset' => '1',
                    'length' => '3',
                    'onEmpty' => array(
                        'locator' => '.loop-example',
                        'replace' => '<p>YOU HAVE NO ITEMS</p>',
                    ),
                    'instructions' => array(
                        'loop-example-strong-node' => array(
                            'locator' => 'strong',
                            'value' => '{$_key} {$_index} {$property0} {$test}',
                            'var' => array(
                                'fetch' => array(
                                    'test' => 'childs.item00.property0'
                                ),
                            ),
                        ),
                        'loop-example-span-node' => array(
                            'locator' => 'span',
                            'value' => 'TADA',
                        ),
                    ),
                ),
                'attribs' => array(
                    'title' => '{$property1}',
                ),
            ),
            'loop-empty-example-prepare' => array(
                'locator' => '.hero-unit',
                'html' => '{$_innerHtml}<ul class="loop-empty-example"><li>BEFORE</li><li/><li>AFTER</li></ul>',
            ),
            'loop-empty-example' => array(
                'locator' => '.loop-empty-example li[2]',
                'loop' => array(
                    'base' => 'depth.items-empty',
                    'onEmpty' => array(
                        'locator' => '.loop-empty-example',
                        'replace' => '<p>YOU HAVE NO ITEMS</p>',
                    ),
                    'instructions' => array(),
                ),
            ),
            'form-example-prepare' => array(
                'locator' => '.hero-unit',
                'html' => '{$_innerHtml}<form class="form-example"/>',
            ),
            'form-example' => array(
                'locator' => '.form-example',
                'helper' => 'WebinoDrawForm',
                'form' => 'exampleForm',
                'cache' => 'exampleForm',
                'route' => 'example-form-route',
                'text_domain' => 'test',
                'trigger' => array(
                    'form-example.event',
                ),
            ),
            'form-template-example-prepare' => array(
                'locator' => '.hero-unit',
                'html' => '{$_innerHtml}<form class="form-template-example"><ul><li><input name="example_text_element"/></li><li><input name="example_text_element2"/></li></ul><input name="send"/></form>',
            ),
            'form-template-example' => array(
                'locator' => '.form-template-example',
                'helper' => 'WebinoDrawForm',
                'form' => 'exampleForm',
                'cache' => 'exampleFormTemplate',
                'instructions' => array(
                    'form-decorator1' => array(
                        'locator' => 'xpath=.//li//input/..',
                        'html' => 'LABEL {$_innerHtml}',
                    ),
                ),
            ),
            'direct-example-prepare' => array(
                'locator' => '.hero-unit',
                'html' => '{$_innerHtml}<div class="direct-example">DIRECT EXAMPLE</div>',
            ),
            'direct-example' => array(
                'locator' => '.direct-example',
                'helper' => 'webinoDrawElement'
            ),
            'event-example-prepare' => array(
                'locator' => '.hero-unit',
                'html' => '{$_innerHtml}<div class="event-example">EVENT EXAMPLE</div>',
            ),
            'event-example' => array(
                'locator' => '.event-example',
                'trigger' => array(
                    'event-example.test',
                ),
            ),
            'subinstructions-example-prepare' => array(
                'locator' => '.hero-unit',
                'html' => '{$_innerHtml}<div class="subinstructions-example"><span>SUB-INSTRUCTIONS</span> <strong>EXAMPLE</strong> <form/></div>',
            ),
            'subinstructions-example' => array(
                'locator' => '.subinstructions-example',
                'instructions' => array(
                    'subtest1' => array(
                        'stackIndex' => '99',
                        'locator' => 'span',
                        'value' => '{$_nodeValue}(TEST)',
                    ),
                    'subtest2' => array(
                        'locator' => 'xpath=.//strong',
                        'value' => '{$_nodeValue} VALUE',
                    ),
                    'subtest-form' => array(
                        'locator' => 'form',
                        'helper' => 'WebinoDrawForm',
                        'form' => 'exampleForm',
                        'cache' => 'exampleFormSubTest',
                        'route' => 'example-form-route',
                        'text_domain' => 'test',
                        'instructions' => array(
                            'form-decorator1' => array(
                                'locator' => 'label span',
                                'value' => '{$_nodeValue}*',
                            ),
                        ),
                    ),
                ),
            ),
            'ajax-example-prepare' => array(
                'locator' => 'head',
                'html' => '{$_innerHtml}<script>jQuery(document).on("click", ".ajax-example a", function(){ jQuery.get($(this).attr("href"), function(data) { jQuery.each(data.fragment, function(selector, html) { jQuery(selector).replaceWith(html); }); if (data.extraTest) { $(".ajax-log").html(data.extraTest); } }, "json"); return false; });</script>',
            ),
            'ajax-example' => array(
                'locator' => '.hero-unit',
                'html' => '{$_innerHtml}<div class="ajax-example"><a href=".">AJAX</a> | <a href="?fragmentId=ajax-rand">AJAX SINGLE</a> | <a href="?ajaxExtra">AJAX EXTRA</a> : <strong class="ajax-fragment" id="ajax-time">{$time}</strong> - <strong class="ajax-fragment" id="ajax-rand">{$rand}</strong><br /><p class="ajax-log"></p></div>',
                'var' => array(
                    'set' => array(
                        'time' => '',
                        'rand' => '',
                    ),
                    'helper' => array(
                        'time' => array(
                            'time' => array(),
                        ),
                        'rand' => array(
                            'rand' => array(),
                        ),
                    ),
                ),
            ),
            'cache-example-prepare' => array(
                'locator' => '.hero-unit',
                'html' => '{$_innerHtml}<div class="cache-example"></div>',
            ),
            'cache-example' => array(
                'locator' => '.cache-example',
                'value' => 'CACHED? {$rand}',
                'cache' => 'example',
                'sleep' => true,
                'var' => array(
                    'set' => array(
                        'rand' => '',
                    ),
                    'helper' => array(
                        'rand' => array(
                            'rand' => array(),
                        ),
                    ),
                ),
            ),
        ),
        /**
         * The Instruction Set Example
         */
        'instructionset' => array(
            'exampleinstructionset_01' => array(
            ),
            'exampleinstructionset_02' => array(
            ),
        ),
    ),
    /**
     * Create Form via DI
     */
    'di' => array(
        'instance' => array(
            'alias' => array(
                'exampleForm' => 'WebinoDraw\Form\DiForm',
            ),
            'exampleForm' => array(
                'parameters' => array(
                    'config' => array(
                        'hydrator' => 'Zend\Stdlib\Hydrator\ArraySerializable',
                        'attributes' => array(
                            'method' => 'post',
                            'class' => 'example-form',
                        ),
                        'elements' => array(
                            array(
                                'spec' => array(
                                    'name' => 'example_text_element',
                                    'options' => array(
                                        'label' => 'Label example',
                                    ),
                                    'attributes' => array(
                                        'type' => 'text',
                                        'placeholder' => 'Type something ...',
                                    ),
                                ),
                            ),
                            array(
                                'spec' => array(
                                    'name' => 'example_text_element2',
                                    'options' => array(
                                        'label' => 'Label example2',
                                    ),
                                    'attributes' => array(
                                        'type' => 'text',
                                        'placeholder' => 'Type something2 ...',
                                    ),
                                ),
                            ),
                            array(
                                'spec' => array(
                                    'type' => 'Zend\Form\Element\Csrf',
                                    'name' => 'security',
                                ),
                            ),
                            array(
                                'spec' => array(
                                    'name' => 'send',
                                    'attributes' => array(
                                        'type' => 'submit',
                                        'value' => 'Submit',
                                    ),
                                ),
                            ),
                        ),
                        'input_filter' => array(
                            'example_text_element' => array(
                                'name' => 'example_text_element',
                                'required' => true,
                                'validators' => array(
                                ),
                            ),
                        ),
                    ),
                ),
            ),
        ),
    ),
);
