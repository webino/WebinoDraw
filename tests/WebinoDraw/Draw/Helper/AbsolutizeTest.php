<?php
/**
 * Webino (http://webino.sk)
 *
 * @link        https://github.com/webino/WebinoDraw for the canonical source repository
 * @copyright   Copyright (c) 2012-2017 Webino, s. r. o. (http://webino.sk)
 * @author      Peter Bačinský <peter@bacinsky.sk>
 * @license     BSD-3-Clause
 */

namespace WebinoDraw\Draw\Helper;

use ArrayObject;
use DOMAttr;
use DOMElement;
use WebinoDraw\VarTranslator\Translation;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-08-03 at 01:23:45.
 */
class AbsolutizeTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Absolutize
     */
    protected $object;

    /**
     * @var \Zend\View\Helper\BasePath
     */
    protected $basePath;

    /**
     * @var \Zend\View\Helper\ServerUrl
     */
    protected $serverUrl;

    /**
     * @var
     */
    protected $nodes;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $varTranslator   = $this->getMock('WebinoDraw\VarTranslator\VarTranslator', [], [], '', false);
        $this->serverUrl = $this->getMock('Zend\View\Helper\ServerUrl');
        $this->basePath  = $this->getMock('Zend\View\Helper\BasePath');
        $this->object    = new Absolutize($this->serverUrl, $this->basePath);
        $this->nodes     = $this->getMock('WebinoDraw\Dom\NodeList', [], [], '', false);

        $varTranslator
            ->expects($this->once())
            ->method('createTranslation')
            ->will($this->returnValue(new Translation));

        $this->object->setVarTranslator($varTranslator);
    }

    /**
     * @covers WebinoDraw\Draw\Helper\Absolutize::drawNodes
     */
    public function testDrawNodes()
    {
        $basePath      = '/test/base/path';
        $attrValue     = 'test-value';
        $expected      = $basePath . '/' . $attrValue;
        $attr          = new DOMAttr('test-attr', $attrValue);
        $nodesIterator = new ArrayObject([$attr]);

        $this->nodes->expects($this->once())
            ->method('getIterator')
            ->will($this->returnValue($nodesIterator));

        $this->basePath
            ->expects($this->once())
            ->method('__invoke')
            ->will($this->returnValue($basePath));

        $this->object->drawNodes($this->nodes, []);
        $this->assertEquals($expected, $attr->nodeValue);
    }

    /**
     * @covers WebinoDraw\Draw\Helper\Absolutize::drawNodes
     */
    public function testDrawNodesWithServerUrl()
    {
        $spec          = ['serverUrl' => true];
        $serverUrl     = 'http://example.com';
        $basePath      = '/test/base/path';
        $attrValue     = 'test-value';
        $expected      = $serverUrl . $basePath . '/' . $attrValue;
        $attr          = new DOMAttr('test-attr', $attrValue);
        $nodesIterator = new ArrayObject([$attr]);

        $this->nodes->expects($this->once())
            ->method('getIterator')
            ->will($this->returnValue($nodesIterator));

        $this->basePath
            ->expects($this->once())
            ->method('__invoke')
            ->will($this->returnValue($basePath));

        $this->serverUrl
            ->expects($this->once())
            ->method('__invoke')
            ->will($this->returnValue($serverUrl));

        $this->object->drawNodes($this->nodes, $spec);

        $this->assertEquals($expected, $attr->nodeValue);
    }

    /**
     * @covers WebinoDraw\Draw\Helper\Absolutize::drawNodes
     */
    public function testDrawNodesInvalidAttr()
    {
        $this->setExpectedException('WebinoDraw\Exception\RuntimeException');

        // invalid attr
        $attr = new DOMElement('test-element');
        $nodesIterator = new ArrayObject([$attr]);

        $this->nodes->expects($this->once())
            ->method('getIterator')
            ->will($this->returnValue($nodesIterator));

        $this->basePath
            ->expects($this->once())
            ->method('__invoke');

        $this->object->drawNodes($this->nodes, []);
    }

    /**
     * @covers WebinoDraw\Draw\Helper\Absolutize::drawNodes
     */
    public function testDrawNodesCycle()
    {
        $basePath      = '/test/base/path';
        $attrValue     = 'test-value';
        $attrValue2    = 'test-value2';
        $attrValue3    = 'test-value3';
        $attr          = new DOMAttr('test-attr', $attrValue);
        $attr2         = new DOMAttr('test-attr', $attrValue2);
        $attr3         = new DOMAttr('test-attr', $attrValue3);
        $nodesIterator = new ArrayObject([$attr, $attr2, $attr3]);

        $this->nodes->expects($this->once())
            ->method('getIterator')
            ->will($this->returnValue($nodesIterator));

        $this->basePath
            ->expects($this->once())
            ->method('__invoke')
            ->will($this->returnValue($basePath));

        $this->object->drawNodes($this->nodes, []);

        $this->assertEquals($basePath . '/' . $attrValue, $attr->nodeValue);
        $this->assertEquals($basePath . '/' . $attrValue2, $attr2->nodeValue);
        $this->assertEquals($basePath . '/' . $attrValue3, $attr3->nodeValue);
    }

    /**
     * @covers WebinoDraw\Draw\Helper\Absolutize::drawNodes
     * @covers WebinoDraw\Draw\Helper\Absolutize::removeDotSegments
     */
    public function testRemoveDotSegments()
    {
        $basePath      = '/test/base/path';
        $attrValue     = '/test-absolute/./test-relative';
        $expected      = $basePath . '/test-absolute/test-relative';
        $attr          = new DOMAttr('test-attr', $attrValue);
        $nodesIterator = new ArrayObject([$attr]);

        $this->nodes->expects($this->once())
            ->method('getIterator')
            ->will($this->returnValue($nodesIterator));

        $this->basePath
            ->expects($this->once())
            ->method('__invoke')
            ->will($this->returnValue($basePath));

        $this->object->drawNodes($this->nodes, []);
        $this->assertEquals($expected, $attr->nodeValue);
    }

    /**
     * @covers WebinoDraw\Draw\Helper\Absolutize::drawNodes
     * @covers WebinoDraw\Draw\Helper\Absolutize::removeDotSegments
     */
    public function testRemoveDotSegmentsUp()
    {
        $basePath      = '/test/base/path';
        $attrValue     = '/test-absolute/../test-relative';
        $expected      = $basePath . '/test-relative';
        $attr          = new DOMAttr('test-attr', $attrValue);
        $nodesIterator = new ArrayObject([$attr]);

        $this->nodes->expects($this->once())
            ->method('getIterator')
            ->will($this->returnValue($nodesIterator));

        $this->basePath
            ->expects($this->once())
            ->method('__invoke')
            ->will($this->returnValue($basePath));

        $this->object->drawNodes($this->nodes, []);
        $this->assertEquals($expected, $attr->nodeValue);
    }

    /**
     * @covers WebinoDraw\Draw\Helper\Absolutize::drawNodes
     * @covers WebinoDraw\Draw\Helper\Absolutize::removeDotSegments
     */
    public function testRemoveDotSegmentsUp2()
    {
        $basePath      = '/test/base/path';
        $attrValue     = '/test-absolute/test/test2/../../../test-relative';
        $expected      = $basePath . '/test-relative';
        $attr          = new DOMAttr('test-attr', $attrValue);
        $nodesIterator = new ArrayObject([$attr]);

        $this->nodes->expects($this->once())
            ->method('getIterator')
            ->will($this->returnValue($nodesIterator));

        $this->basePath
            ->expects($this->once())
            ->method('__invoke')
            ->will($this->returnValue($basePath));

        $this->object->drawNodes($this->nodes, []);
        $this->assertEquals($expected, $attr->nodeValue);
    }

    /**
     * @covers WebinoDraw\Draw\Helper\Absolutize::drawNodes
     * @covers WebinoDraw\Draw\Helper\Absolutize::removeDotSegments
     */
    public function testRemoveDotSegmentsUpTooMuch()
    {
        $basePath      = '';
        $attrValue     = '/test-absolute/../../test-relative';
        $expected      = $basePath . '/test-relative';
        $attr          = new DOMAttr('test-attr', $attrValue);
        $nodesIterator = new ArrayObject([$attr]);

        $this->nodes->expects($this->once())
            ->method('getIterator')
            ->will($this->returnValue($nodesIterator));

        $this->basePath
            ->expects($this->once())
            ->method('__invoke')
            ->will($this->returnValue($basePath));

        $this->object->drawNodes($this->nodes, []);
        $this->assertEquals($expected, $attr->nodeValue);
    }

    /**
     * @covers WebinoDraw\Draw\Helper\Absolutize::drawNodes
     * @covers WebinoDraw\Draw\Helper\Absolutize::removeDotSegments
     */
    public function testRemoveDotSegmentsJustDot()
    {
        $basePath      = '/test/base/path';
        $attrValue     = '.';
        $expected      = $basePath . '/';
        $attr          = new DOMAttr('test-attr', $attrValue);
        $nodesIterator = new ArrayObject([$attr]);

        $this->nodes->expects($this->once())
            ->method('getIterator')
            ->will($this->returnValue($nodesIterator));

        $this->basePath
            ->expects($this->once())
            ->method('__invoke')
            ->will($this->returnValue($basePath));

        $this->object->drawNodes($this->nodes, []);
        $this->assertEquals($expected, $attr->nodeValue);
    }

    /**
     * @covers WebinoDraw\Draw\Helper\Absolutize::drawNodes
     * @covers WebinoDraw\Draw\Helper\Absolutize::removeDotSegments
     */
    public function testRemoveDotSegmentsJustDoubleDot()
    {
        $basePath  = '';
        $attrValue = '..';
        $expected  = '/';
        $attr      = new DOMAttr('test-attr', $attrValue);

        $nodesIterator = new ArrayObject([$attr]);

        $this->nodes->expects($this->once())
            ->method('getIterator')
            ->will($this->returnValue($nodesIterator));

        $this->basePath
            ->expects($this->once())
            ->method('__invoke')
            ->will($this->returnValue($basePath));

        $this->object->drawNodes($this->nodes, []);
        $this->assertEquals($expected, $attr->nodeValue);
    }

    /**
     * @covers WebinoDraw\Draw\Helper\Absolutize::drawNodes
     * @covers WebinoDraw\Draw\Helper\Absolutize::removeDotSegments
     */
    public function testRemoveDotSegmentsSomeShit()
    {
        $basePath      = '';
        $attrValue     = './../root/test-absolute/test/../test2/./test3/../.././.././test-relative';
        $expected      = '/root/test-relative';
        $attr          = new DOMAttr('test-attr', $attrValue);
        $nodesIterator = new ArrayObject([$attr]);

        $this->nodes->expects($this->once())
            ->method('getIterator')
            ->will($this->returnValue($nodesIterator));

        $this->basePath
            ->expects($this->once())
            ->method('__invoke')
            ->will($this->returnValue($basePath));

        $this->object->drawNodes($this->nodes, []);
        $this->assertEquals($expected, $attr->nodeValue);
    }
}
