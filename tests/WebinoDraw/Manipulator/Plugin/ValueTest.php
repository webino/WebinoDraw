<?php
/**
 * Webino (http://webino.sk)
 *
 * @link        https://github.com/webino/WebinoDraw for the canonical source repository
 * @copyright   Copyright (c) 2012-2014 Webino, s. r. o. (http://webino.sk)
 * @author      Peter Bačinský <peter@bacinsky.sk>
 * @license     BSD-3-Clause
 */

namespace WebinoDraw\Manipulator\Plugin;

use DOMDocument;
use DOMXpath;
use WebinoDraw\Manipulator\Plugin\PluginArgument;
use WebinoDraw\VarTranslator\Translation;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-07-31 at 22:26:21.
 */
class ValueTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Value
     */
    protected $object;

    /**
     * @var \Zend\View\Helper\EscapeHtml
     */
    protected $escapeHtml;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->escapeHtml = $this->getMock('Zend\View\Helper\EscapeHtml', ['escapeHtml']);
        $this->object     = new Value($this->escapeHtml);
    }

    /**
     * @covers WebinoDraw\Manipulator\Plugin\Value::inLoop
     * @todo   Implement testInLoop().
     */
    public function testValue()
    {
        $dom = new DOMDocument;
        $dom->registerNodeClass('DOMElement', 'WebinoDraw\Dom\Element');
        $dom->loadXML('<node/>');
        $dom->xpath = new DOMXpath($dom);

        $value          = 'testvalue';
        $spec           = ['value' => $value];
        $helper         = $this->getMock('WebinoDraw\Draw\Helper\AbstractHelper');
        $varTranslation = new Translation;

        $helper
            ->expects($this->once())
            ->method('translateValue')
            ->with($value, $varTranslation)
            ->will($this->returnValue($value));

        $arg = new PluginArgument([
            'node'           => $dom->firstChild,
            'spec'           => $spec,
            'helper'         => $helper,
            'translation'    => new Translation,
            'varTranslation' => $varTranslation,
        ]);

        $this->object->inLoop($arg);
        $this->assertEquals($value, $dom->firstChild->nodeValue);
    }
}
